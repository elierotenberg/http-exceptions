"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
var _ = require("lodash-next");
var HTTPError = require("./HTTPError");

// 4XX Client Errors
var BadRequest = HTTPError.extend(400, "Bad Request", "BadRequest");
var Unauthorized = HTTPError.extend(401, "Unauthorized", "Unauthorized");
var Forbidden = HTTPError.extend(403, "Forbidden", "Forbidden");
var NotFound = HTTPError.extend(404, "Not Found", "NotFound");
var TooManyRequests = HTTPError.extend(429, "Too Many Requests", "TooManyRequests");

// 5XX Server Errors
var InternalServerError = HTTPError.extend(500, "Internal Server Error", "InternalServerError");
var ServiceUnavailable = HTTPError.extend(503, "Service Unavailable", "ServiceUnavailable");

function forward(res, err) {
  _.dev(function () {
    return res.should.be.an.Object && res.status.should.be.a.Function && res.json.should.be.a.Function && err.should.be.an.instanceOf(HTTPError);
  });
  res.status(err.getStatusCode()).json({ code: err.getStatusCode(), err: err.getStatusText(), reason: err.getReason() });
}

module.exports = {
  HTTPError: HTTPError,

  BadRequest: BadRequest,
  Unauthorized: Unauthorized,
  Forbidden: Forbidden,
  NotFound: NotFound,
  TooManyRequests: TooManyRequests,

  InternalServerError: InternalServerError,
  ServiceUnavailable: ServiceUnavailable,

  forward: forward };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3pCLElBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNsQyxJQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDakMsSUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDOzs7QUFHekMsSUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsYUFBYSxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQ3RFLElBQU0sWUFBWSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLGNBQWMsRUFBRSxjQUFjLENBQUMsQ0FBQztBQUMzRSxJQUFNLFNBQVMsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxXQUFXLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDbEUsSUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ2hFLElBQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLG1CQUFtQixFQUFFLGlCQUFpQixDQUFDLENBQUM7OztBQUd0RixJQUFNLG1CQUFtQixHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLHVCQUF1QixFQUFFLHFCQUFxQixDQUFDLENBQUM7QUFDbEcsSUFBTSxrQkFBa0IsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxxQkFBcUIsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDOztBQUU5RixTQUFTLE9BQU8sQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFO0FBQ3pCLEdBQUMsQ0FBQyxHQUFHLENBQUM7V0FBTSxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxJQUNqQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFDL0IsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLElBQzdCLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsU0FBUyxDQUFDO0dBQUEsQ0FDdkMsQ0FBQztBQUNGOzs7O0FBSUEsYUFBQSxTQUFTOztBQUVULGNBQUEsVUFBVTtBQUNWLGdCQUFBLFlBQVk7QUFDWixhQUFBLFNBQVM7QUFDVCxZQUFBLFFBQVE7QUFDUixtQkFBQSxlQUFlOztBQUVmLHVCQUFBLG1CQUFtQjtBQUNuQixzQkFBQSxrQkFBa0I7O0FBRWxCLFdBQUEsT0FBTyxFQUNSLENBQUMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoLW5leHQnKTtcclxuY29uc3QgSFRUUEVycm9yID0gcmVxdWlyZSgnLi9IVFRQRXJyb3InKTtcclxuXHJcbi8vIDRYWCBDbGllbnQgRXJyb3JzXHJcbmNvbnN0IEJhZFJlcXVlc3QgPSBIVFRQRXJyb3IuZXh0ZW5kKDQwMCwgJ0JhZCBSZXF1ZXN0JywgJ0JhZFJlcXVlc3QnKTtcclxuY29uc3QgVW5hdXRob3JpemVkID0gSFRUUEVycm9yLmV4dGVuZCg0MDEsICdVbmF1dGhvcml6ZWQnLCAnVW5hdXRob3JpemVkJyk7XHJcbmNvbnN0IEZvcmJpZGRlbiA9IEhUVFBFcnJvci5leHRlbmQoNDAzLCAnRm9yYmlkZGVuJywgJ0ZvcmJpZGRlbicpO1xyXG5jb25zdCBOb3RGb3VuZCA9IEhUVFBFcnJvci5leHRlbmQoNDA0LCAnTm90IEZvdW5kJywgJ05vdEZvdW5kJyk7XHJcbmNvbnN0IFRvb01hbnlSZXF1ZXN0cyA9IEhUVFBFcnJvci5leHRlbmQoNDI5LCAnVG9vIE1hbnkgUmVxdWVzdHMnLCAnVG9vTWFueVJlcXVlc3RzJyk7XHJcblxyXG4vLyA1WFggU2VydmVyIEVycm9yc1xyXG5jb25zdCBJbnRlcm5hbFNlcnZlckVycm9yID0gSFRUUEVycm9yLmV4dGVuZCg1MDAsICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InLCAnSW50ZXJuYWxTZXJ2ZXJFcnJvcicpO1xyXG5jb25zdCBTZXJ2aWNlVW5hdmFpbGFibGUgPSBIVFRQRXJyb3IuZXh0ZW5kKDUwMywgJ1NlcnZpY2UgVW5hdmFpbGFibGUnLCAnU2VydmljZVVuYXZhaWxhYmxlJyk7XHJcblxyXG5mdW5jdGlvbiBmb3J3YXJkKHJlcywgZXJyKSB7XHJcbiAgXy5kZXYoKCkgPT4gcmVzLnNob3VsZC5iZS5hbi5PYmplY3QgJiZcclxuICAgIHJlcy5zdGF0dXMuc2hvdWxkLmJlLmEuRnVuY3Rpb24gJiZcclxuICAgIHJlcy5qc29uLnNob3VsZC5iZS5hLkZ1bmN0aW9uICYmXHJcbiAgICBlcnIuc2hvdWxkLmJlLmFuLmluc3RhbmNlT2YoSFRUUEVycm9yKVxyXG4gICk7XHJcbiAgcmVzLnN0YXR1cyhlcnIuZ2V0U3RhdHVzQ29kZSgpKS5qc29uKHsgY29kZTogZXJyLmdldFN0YXR1c0NvZGUoKSwgZXJyOiBlcnIuZ2V0U3RhdHVzVGV4dCgpLCByZWFzb246IGVyci5nZXRSZWFzb24oKSB9KTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgSFRUUEVycm9yLFxyXG5cclxuICBCYWRSZXF1ZXN0LFxyXG4gIFVuYXV0aG9yaXplZCxcclxuICBGb3JiaWRkZW4sXHJcbiAgTm90Rm91bmQsXHJcbiAgVG9vTWFueVJlcXVlc3RzLFxyXG5cclxuICBJbnRlcm5hbFNlcnZlckVycm9yLFxyXG4gIFNlcnZpY2VVbmF2YWlsYWJsZSxcclxuXHJcbiAgZm9yd2FyZCxcclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9